---
name: "Build AUR package repository"
description: >
    Build a given list of AUR packages and store them in a repository.
branding:
  icon: package
  color: blue
inputs:
  packages:
    description: >
        A string with a space separated list of aur packages that should
        be built and included in the repository. Besides simple names of
        aur packages (e.g. "go-do") you can also specify any git repo incl.
        path (e.g.
        https://github.com/VDR4arch/vdr4arch/plugins/vdr-dummydevice)
    required: true
  missing_pacman_dependencies:
    description: >
        A string with a space separated list of dependencies that are not
        correctly mentioned as dependencies in the PKGBUILD file and that
        are available from pacman.
    required: false
    default: ""
  missing_aur_dependencies:
    description: >
        A string with a space separated list of dependencies that are not
        correctly mentioned as dependencies in the PKGBUILD file and that
        are available from AUR.
    required: false
    default: ""
  reponame:
    description: >
      A string containing the name of the pacman repository to be used.
      Defaults to aurci2 for compatibility reasons.
    required: false
    default: 'aurci2'
  repodir:
    description: >
      A string containing the subdirectory under GITHUB_WORKSPACE where
      the packages will be stored. Can be empty, as per default.
    required: false
    default: ''
  keep:
    description: >
      A Boolean to tell if existing flags from github workspace directory
      should be preserved and not rebuild. Defaults to false, that is the
      way it used to work before this flag has been made available
    required: false
    default: "false"
  arch:
    description: >
      A string describing the target architecture of the packages to be
      created. Typical values are amd64 and arm64.
    required: false
    default: "amd64"
  arch-override:
    description: >
      A boolean.If set to true, any architecture setting in PKGDESC will be
      ignored.
    required: false
    default: "false"
outputs:
  updated:
    description: >
      A String ("true" or "false") to tell if anything has been updated and
      thus may need to be uploaded. Always true if keep=false
    value: ${{ steps.run.outputs.updated }}
runs:
  using: composite
  steps:
    - name: Build Action container
      id: buildcontainer
      shell: bash
      run: |
        /usr/bin/docker build \
        --platform=${{ inputs.arch }} \
        -t build-aur-packages:local \
        "${{ github.action_path }}"
    - name: Run Action container
      id: run
      shell: bash
      env:
        INPUT_MISSING_PACMAN_DEPENDENCIES: >
          ${{ inputs.missing_pacman_dependencies }}
        INPUT_MISSING_AUR_DEPENDENCIES: >
          ${{ inputs.missing_aur_dependencies }}
      run: |
        /usr/bin/docker run --rm \
        --platform=${{ inputs.arch }} \
        --name build-aur-packages-run \
        --workdir /github/workspace \
        -e "INPUT_PACKAGES=${{ inputs.packages }}" \
        -e INPUT_MISSING_PACMAN_DEPENDENCIES \
        -e INPUT_MISSING_AUR_DEPENDENCIES \
        -e "INPUT_REPONAME=${{ inputs.reponame }}" \
        -e "INPUT_REPODIR=${{ inputs.repodir }}" \
        -e "INPUT_KEEP=${{ inputs.keep }}" \
        -e "INPUT_ARCH_OVERRIDE=${{ inputs.arch-override }}" \
        -e "RUNNER_DEBUG" \
        -e "GITHUB_WORKSPACE=/github/workspace" \
        -e "GITHUB_OUTPUT=/dev/github.output" \
        -v "/var/run/docker.sock":"/var/run/docker.sock" \
        -v "${{ github.workspace }}":"/github/workspace" \
        -v "$GITHUB_OUTPUT:/dev/github.output" \
        build-aur-packages:local
